load("C:/Users/student/Desktop/zajecia 1.Rmd")
options(max.print = 100)
schorzenia_serca <- read.csv("heart_disease.csv")
# to jest komentarz, ignorowany przez interpreter
schorzenia_serca <- read.csv("heart_disease.csv")
# to jest komentarz, ignorowany przez interpreter
?readcsf
?read.csv
heart_disease <- read.csv("C:/Users/student/Desktop/heart_disease.csv", header=FALSE, stringsAsFactors=TRUE)
View(heart_disease)
schorzenia_serca <- read.csv("heart_disease.csv")
# to jest komentarz, ignorowany przez interpreter
# read.csv(file, header = TRUE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "", ...)
#
# read.csv2(file, header = TRUE, sep = ";", quote = "\"",
#           dec = ",", fill = TRUE, comment.char = "", ...)
#
# read.delim(file, header = TRUE, sep = "\t", quote = "\"",
#            dec = ".", fill = TRUE, comment.char = "", ...)
#
# read.delim2(file, header = TRUE, sep = "\t", quote = "\"",
#             dec = ",", fill = TRUE, comment.char = "", ...)
head(schorzenia_serca)
schorzenia_serca
View(schorzenia_serca)
library(xlsx)
library(xlsx)
library(xlsx)
heart_disease_xlsx <- read.xlsx("heart_disease.xlsx",1, startRow = 3)
library(xlsx)
heart_disease_xlsx <- read.xlsx("heart_disease.xlsx",1, startRow = 3)
View(heart_disease)
View(heart_disease)
View(schorzenia_serca)
View(schorzenia_serca)
summary(schorzenia_serca)
read.csv
?read.csv
schorzenia_serca <- read.csv("heart_disease.csv",stringsAsFactors = TRUE)
# to jest komentarz, ignorowany przez interpreter
summary(schorzenia_serca)
colnames(schorzenia_serca)
colnames(schorzenia_serca) <-
c(
"Gender",
"Age",
"Education",
"CurrentSmoker",
"CigsPerDay",
"BPMeds",
"PrevalentStroke",
"PrevalentHyp",
"Diabetes",
"TotChol",
"SysBP",
"DiaBP",
"BMI",
"HeartRate",
"Glucose",
"HeartStroke"
)
schorzenia_serca
nrow(schorzenia_serca)
ncol(schorzenia_serca)
row.names(schorzenia_serca)
head(schorzenia_serca, n=3)
tail(schorzenia_serca, n=3)
#schorzenia_serca$Gender
schorzenia_serca$Gender[1:20]
class(schorzenia_serca$Gender[1:20])
5:20
schorzenia_serca$Age
typeof(schorzenia_serca$Age)
schorzenia_serca$SysBP
typeof(schorzenia_serca$SysBP)
c("text", "tekst")
typeof(c("text", "tekst"))
c(2==2,2==4)
c(TRUE, FALSE, T, F)
typeof(c(TRUE, FALSE, T, F))
as.Date("2022-10-20")
class(as.Date("2022-10-20"))
is.numeric(schorzenia_serca$Age) #każdy `integer` jest `numeric`
is.integer(schorzenia_serca$Age)
is.character(schorzenia_serca$Age)
is.factor(schorzenia_serca$Age)
as.character(schorzenia_serca$Age[1:30])
as.integer("---")
#suma
sum(schorzenia_serca$CigsPerDay)
sum(schorzenia_serca$CigsPerDay, na.rm = TRUE)
#średnia
mean(schorzenia_serca$CigsPerDay, na.rm = TRUE)
sum(schorzenia_serca$CigsPerDay, na.rm = TRUE)/nrow(schorzenia_serca)
# wartość najmniejsza i największa
min(schorzenia_serca$CigsPerDay, na.rm = TRUE)
max(schorzenia_serca$CigsPerDay, na.rm = TRUE)
# kwantyle (można podać wektor ułamków lub jedną warość)
quantile(schorzenia_serca$CigsPerDay, probs=c(0.01,0.25,0.5,0.75,0.99), na.rm = TRUE)
quantile(schorzenia_serca$CigsPerDay, probs=0.75, na.rm = TRUE)
unique(schorzenia_serca$PrevalentHyp)
unique(schorzenia_serca$PrevalentStroke)
unique(schorzenia_serca$Education)
unique(schorzenia_serca$PrevalentHyp)
unique(schorzenia_serca$PrevalentStroke)
unique(schorzenia_serca$Education)
table(schorzenia_serca$PrevalentHyp)
table(schorzenia_serca$PrevalentStroke)
table(schorzenia_serca$Education)
table(schorzenia_serca$Education, useNA = "always")
table(schorzenia_serca$Education, schorzenia_serca$Gender)
table(schorzenia_serca$Education, schorzenia_serca$Gender, schorzenia_serca$PrevalentHyp)
schorzenia_serca$Age[1:10]
schorzenia_serca$Age <- schorzenia_serca$Age + 2
schorzenia_serca$Age[1:10]
schorzenia_serca[,"AgeGroup"] <- floor(schorzenia_serca$Age/10)*10
schorzenia_serca$AgeGroup <- as.integer(schorzenia_serca$AgeGroup)
schorzenia_serca[1:5,]
as.character(schorzenia_serca$AgeGroup[1:10])
as.factor(schorzenia_serca$AgeGroup)[1:10]
table(schorzenia_serca$AgeGroup)
schorzenia_serca[5,3]
schorzenia_serca[5,"Education"]
schorzenia_serca[1:4,]
schorzenia_serca[1:4,"Education"]
schorzenia_serca[1:10, c("Gender","Age","Education") ]
schorzenia_serca[1:6, c("Gender","Education","Age") ]
schorzenia_serca[ , c("Gender","Education","Age") ]
schorzenia_serca$Gender=="Female"
schorzenia_serca[schorzenia_serca$Gender=="Female", c("Gender","Age","Education") ]
wyksztalconeKobiety <- schorzenia_serca[(schorzenia_serca$Gender=="Female" & schorzenia_serca$Education=="graduate"),
c("Gender","Age","Education","PrevalentStroke") ]
wyksztalconeKobiety
write.csv(wyksztalconeKobiety, "wyksztalconeKobiety.csv") #mozna podać pełną ścieżkę do pliku
write.xlsx(wyksztalconeKobiety, "wyksztalconeKobiety.xlsx")
write.csv(wyksztalconeKobiety, "wyksztalconeKobiety.csv") #mozna podać pełną ścieżkę do pliku
write.xlsx(wyksztalconeKobiety, "wyksztalconeKobiety.xlsx")
schorzenia_serca[45:78,]
schorzenia_serca[is.na(schorzenia_serca$Education),]
nrow(schorzenia_serca[is.na(schorzenia_serca$Education),])
sum(is.na(schorzenia_serca$Education))
wszyscyZedukacją <- schorzenia_serca[!is.na(schorzenia_serca$Education),]
wszyscyZedukacją
schorzenia_serca$CigsPerDay[is.na(schorzenia_serca$CigsPerDay)] <- 0
options(max.print = 100)
schorzenia_serca <- read.csv("heart_disease.csv",stringsAsFactors = TRUE)
# to jest komentarz, ignorowany przez interpreter
?read.csv
#
# read.table(file, header = FALSE, sep = "", quote = "\"'",
#            dec = ".", numerals = c("allow.loss", "warn.loss", "no.loss"),
#            row.names, col.names, as.is = !stringsAsFactors,
#            na.strings = "NA", colClasses = NA, nrows = -1,
#            skip = 0, check.names = TRUE, fill = !blank.lines.skip,
#            strip.white = FALSE, blank.lines.skip = TRUE,
#            comment.char = "#",
#            allowEscapes = FALSE, flush = FALSE,
#            stringsAsFactors = default.stringsAsFactors(),
#            fileEncoding = "", encoding = "unknown", text, skipNul = FALSE)
#
# read.csv(file, header = TRUE, sep = ",", quote = "\"",
#          dec = ".", fill = TRUE, comment.char = "", ...)
#
# read.csv2(file, header = TRUE, sep = ";", quote = "\"",
#           dec = ",", fill = TRUE, comment.char = "", ...)
#
# read.delim(file, header = TRUE, sep = "\t", quote = "\"",
#            dec = ".", fill = TRUE, comment.char = "", ...)
#
# read.delim2(file, header = TRUE, sep = "\t", quote = "\"",
#             dec = ",", fill = TRUE, comment.char = "", ...)
head(schorzenia_serca)
schorzenia_serca
View(schorzenia_serca)
library(xlsx)
heart_disease_xlsx <- read.xlsx("heart_disease.xlsx",1, startRow = 3)
summary(schorzenia_serca)
colnames(schorzenia_serca)
c("Gender",          "age",             "education",       "currentSmoker",   "cigsPerDay",      "BPMeds",          "prevalentStroke",
"prevalentHyp",    "diabetes",        "totChol",         "sysBP",           "diaBP",           "BMI",             "heartRate",
"glucose",         "Heart_.stroke"  )
colnames(schorzenia_serca) <-
c(
"Gender",
"Age",
"Education",
"CurrentSmoker",
"CigsPerDay",
"BPMeds",
"PrevalentStroke",
"PrevalentHyp",
"Diabetes",
"TotChol",
"SysBP",
"DiaBP",
"BMI",
"HeartRate",
"Glucose",
"HeartStroke"
)
schorzenia_serca
nrow(schorzenia_serca)
ncol(schorzenia_serca)
row.names(schorzenia_serca)
head(schorzenia_serca, n=3)
tail(schorzenia_serca, n=3)
#schorzenia_serca$Gender
schorzenia_serca$Gender[1:20]
class(schorzenia_serca$Gender[1:20])
5:20
schorzenia_serca$Age
typeof(schorzenia_serca$Age)
schorzenia_serca$SysBP
typeof(schorzenia_serca$SysBP)
c("text", "tekst")
typeof(c("text", "tekst"))
c(2==2,2==4)
c(TRUE, FALSE, T, F)
typeof(c(TRUE, FALSE, T, F))
as.Date("2022-10-20")
class(as.Date("2022-10-20"))
is.numeric(schorzenia_serca$Age) #każdy `integer` jest `numeric`
is.integer(schorzenia_serca$Age)
is.character(schorzenia_serca$Age)
is.factor(schorzenia_serca$Age)
as.character(schorzenia_serca$Age[1:30])
as.integer("---")
#suma
sum(schorzenia_serca$CigsPerDay)
sum(schorzenia_serca$CigsPerDay, na.rm = TRUE)
#średnia
mean(schorzenia_serca$CigsPerDay, na.rm = TRUE)
sum(schorzenia_serca$CigsPerDay, na.rm = TRUE)/nrow(schorzenia_serca)
# wartość najmniejsza i największa
min(schorzenia_serca$CigsPerDay, na.rm = TRUE)
max(schorzenia_serca$CigsPerDay, na.rm = TRUE)
# kwantyle (można podać wektor ułamków lub jedną warość)
quantile(schorzenia_serca$CigsPerDay, probs=c(0.01,0.25,0.5,0.75,0.99), na.rm = TRUE)
quantile(schorzenia_serca$CigsPerDay, probs=0.75, na.rm = TRUE)
unique(schorzenia_serca$PrevalentHyp)
unique(schorzenia_serca$PrevalentStroke)
unique(schorzenia_serca$Education)
table(schorzenia_serca$PrevalentHyp)
table(schorzenia_serca$PrevalentStroke)
table(schorzenia_serca$Education)
table(schorzenia_serca$Education, useNA = "always")
table(schorzenia_serca$Education, schorzenia_serca$Gender)
table(schorzenia_serca$Education, schorzenia_serca$Gender, schorzenia_serca$PrevalentHyp)
schorzenia_serca$Age[1:10]
schorzenia_serca$Age <- schorzenia_serca$Age + 2
schorzenia_serca$Age[1:10]
schorzenia_serca[,"AgeGroup"] <- floor(schorzenia_serca$Age/10)*10
schorzenia_serca$AgeGroup <- as.integer(schorzenia_serca$AgeGroup)
schorzenia_serca[1:5,]
as.character(schorzenia_serca$AgeGroup[1:10])
as.factor(schorzenia_serca$AgeGroup)[1:10]
table(schorzenia_serca$AgeGroup)
schorzenia_serca[5,3]
schorzenia_serca[5,"Education"]
schorzenia_serca[1:4,]
schorzenia_serca[1:4,"Education"]
schorzenia_serca[1:10, c("Gender","Age","Education") ]
schorzenia_serca[1:6, c("Gender","Education","Age") ]
schorzenia_serca[ , c("Gender","Education","Age") ]
schorzenia_serca$Gender=="Female"
schorzenia_serca[schorzenia_serca$Gender=="Female", c("Gender","Age","Education") ]
wyksztalconeKobiety <- schorzenia_serca[(schorzenia_serca$Gender=="Female" & schorzenia_serca$Education=="graduate"),
c("Gender","Age","Education","PrevalentStroke") ]
wyksztalconeKobiety
write.csv(wyksztalconeKobiety, "wyksztalconeKobiety.csv") #mozna podać pełną ścieżkę do pliku
write.xlsx(wyksztalconeKobiety, "wyksztalconeKobiety.xlsx")
TRUE & TRUE
TRUE & FALSE
FALSE & TRUE
FALSE & FALSE
TRUE | TRUE
TRUE | FALSE
FALSE | TRUE
FALSE | FALSE
!TRUE
!FALSE
schorzenia_serca[45:78,]
schorzenia_serca[is.na(schorzenia_serca$Education),]
nrow(schorzenia_serca[is.na(schorzenia_serca$Education),])
sum(is.na(schorzenia_serca$Education))
wszyscyZedukacją <- schorzenia_serca[!is.na(schorzenia_serca$Education),]
wszyscyZedukacją
schorzenia_serca$CigsPerDay[is.na(schorzenia_serca$CigsPerDay)] <- 0
schorzenia_serca$CigsPerDay = = 9
schorzenia_serca$CigsPerDay==9
sum(schorzenia_serca$CigsPerDay==9)
palacze <- schorzenia_serca
palacze[palacze==9] <- NA
schorzenia_serca[,"HeartRate"]<- floor(schorzenia_serca$HeartRate/10)*10
schorzenia_serca[,"HeartRate"]<- floor(schorzenia_serca$HeartRate/10)*10
schorzenia_serca$HeartRate<-as.integer(schorzenia_serca$HeartRate)
schorzenia_serca[1:5,]
schorzenia_serca[,"Glucosegroup"]<-floor(schorzenia_serca$Glucose/10)*10
schorzenia_serca[,"BMIgroup"]<-floor(schorzenia_serca$BMI/5)*5
table(schorzenia_serca$Education, schorzenia_serca$Gender, schorzenia_serca$CurrentSmoker, schorzenia_serca$HeartRate, schorzenia_serca$Diabetes)
setwd("C:/Users/student/Documents/dspszew/jezyk R/materialy/zajecia3")
schorzenia_serca <- read.csv("heart_disease.csv")
head(schorzenia_serca)
schorzenia_serca <- read.csv("heart_disease.csv")
head(schorzenia_serca)
#plot(x,y)
plot(schorzenia_serca$sysBP, schorzenia_serca$diaBP)
#hist(x)
hist(schorzenia_serca$age)
boxplot(schorzenia_serca$age)
#boxplot(CO ~ PODZIAŁ_GRUPY, data=NASZE_DANE)
boxplot(age ~ education, data=schorzenia_serca)
pairs(schorzenia_serca[,c("age","sysBP","diaBP","BMI", "glucose")] )
library(ggplot2) #może wymagać instalacji
schorzenia_serca <- read.csv("heart_disease.csv")
head(schorzenia_serca)
#plot(x,y)
plot(schorzenia_serca$sysBP, schorzenia_serca$diaBP)
#hist(x)
hist(schorzenia_serca$age)
boxplot(schorzenia_serca$age)
#boxplot(CO ~ PODZIAŁ_GRUPY, data=NASZE_DANE)
boxplot(age ~ education, data=schorzenia_serca)
pairs(schorzenia_serca[,c("age","sysBP","diaBP","BMI", "glucose")] )
library(ggplot2) #może wymagać instalacji
#ggplot(RAMKA_DANYCH) +
#  geom_*(aes(x,y))
ggplot(schorzenia_serca) +
geom_point(aes(sysBP, diaBP))
#dodaliśmy parametr color do geom_point
ggplot(schorzenia_serca) +
geom_point(aes(sysBP, diaBP), color="blue")
#dodaliśmy elementy xlab i ylab
ggplot(schorzenia_serca) +
geom_point(aes(sysBP, diaBP), color="blue", alpha=0.2, size=1) +
ggtitle("Blood pressure") +
xlab("Systolic (mm Hg)") +
ylab("Diastolic (mm Hg)") +
theme_bw()
#dodaliśmy elementy xlab i ylab
ggplot(schorzenia_serca) +
geom_point(aes(sysBP, diaBP), color="blue", alpha=0.2, size=1) +
ggtitle("Blood pressure") +
xlab("Systolic (mm Hg)") +
ylab("Diastolic (mm Hg)") +
theme_bw() +
geom_smooth(aes(sysBP, diaBP)) # dodaliśmy linię aproksymacji (wygładzającą)
ggplot(schorzenia_serca) +
geom_point(aes(x=sysBP, y=diaBP, color=Heart_.stroke),alpha=0.3, size=1) + #w tej linii!
ggtitle("Blood pressure") +
xlab("Systolic (mm Hg)") +
ylab("Diastolic (mm Hg)") +
theme_bw()
ggplot(schorzenia_serca) +
geom_point(aes(x=sysBP, y=diaBP, color=Gender),alpha=0.3, size=1) + #w tej linii!
ggtitle("Blood pressure") +
xlab("Systolic (mm Hg)") +
ylab("Diastolic (mm Hg)") +
theme_bw()
ggplot(schorzenia_serca) +
geom_point(aes(x=sysBP, y=diaBP, color=education),alpha=0.5, size=1) + #w tej linii!
ggtitle("Blood pressure") +
xlab("Systolic (mm Hg)") +
ylab("Diastolic (mm Hg)") +
theme_bw()
ggplot(schorzenia_serca) +
geom_histogram(aes(x=age)) +
theme_bw()
ggplot(schorzenia_serca) +
geom_histogram(aes(x=age, color=Gender)) +
theme_bw()
ggplot(schorzenia_serca) +
geom_histogram(aes(x=age, fill=Gender)) +
theme_bw()
ggplot(schorzenia_serca) +
geom_histogram(aes(x=age, fill=Gender), position="dodge") + #pozycja obok siebie
theme_bw()
ggplot(schorzenia_serca) +
geom_histogram(aes(x=age, fill=Gender), position="dodge") +
theme_bw() +
scale_fill_manual(values=c("darkgreen","darkblue"))
ggplot(schorzenia_serca) +
geom_histogram(aes(x=age, fill=Gender), position="dodge") +
theme_bw() +
scale_fill_manual(values=c("darkgreen","darkblue")) +
facet_grid(~education)
